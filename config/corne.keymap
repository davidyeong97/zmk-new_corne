#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define U_MOUSE_MOVE_MAX 1400

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

&mmv {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <400>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DEL>;
            key-positions = <11 12>;
        };

        Gaming_Esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        Gaming_Tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
            layers = <5>;
        };

        Gaming_G {
            bindings = <&kp G>;
            key-positions = <41 42>;
            layers = <5>;
        };
    };

    macros {
        shift: with_lshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "KEY_PRESS_WITH_LEFT_SHIFT_MODIFIER";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        WIN {
            display-name = "WIN";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | TD0  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | ENT  |
            //                    | C_PLAY_PAUSE | LGUI | MO(2) | LT(3, LCTRL) | LT(4, SPACE) | MO(1) | RALT |
            //                    | MB1 |

            bindings = <
&kp TAB  &as Q  &as W             &as E         &as R  &as T        &mmv MOVE_UP     &as Y      &as U  &as I         &as O    &as P     &kp BSPC
&kp ESC  &as A  &as S             &as D         &as F  &as G        &mmv MOVE_DOWN   &as H      &as J  &as K         &as L    &as SEMI  &as SQT
&td0     &as Z  &as X             &as C         &as V  &as B        &mmv MOVE_LEFT   &as N      &as M  &as COMMA     &as DOT  &as FSLH  &kp ENTER
                &kp C_PLAY_PAUSE  &kp LEFT_ALT  &mo 3  &kp LCTRL    &mmv MOVE_RIGHT  &kp SPACE  &mo 2  &kp LEFT_GUI
                                                                    &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        MAC {
            display-name = "MAC";
            bindings = <
&kp TAB  &as Q  &as W             &as E         &as R  &as T           &mmv MOVE_UP     &as Y      &as U  &as I      &as O    &as P     &kp BSPC
&kp ESC  &as A  &as S             &as D         &as F  &as G           &mmv MOVE_DOWN   &as H      &as J  &as K      &as L    &as SEMI  &as SQT
&td0     &as Z  &as X             &as C         &as V  &as B           &mmv MOVE_LEFT   &as N      &as M  &as COMMA  &as DOT  &as FSLH  &kp ENTER
                &kp C_PLAY_PAUSE  &kp LEFT_ALT  &mo 3  &kp LEFT_GUI    &mmv MOVE_RIGHT  &kp SPACE  &mo 2  &kp LCTRL
                                                                       &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "MAC";
        };

        Navigation {
            display-name = "NAV";

            // -----------------------------------------------------------------------------------------
            // | TRANS | TRANS | KP_7 | KP_8 | KP_9 | TRANS |   | TRANS | NONE | HOME | UP   | END  | K_SCROLL_UP |
            // | TRANS | KP_0  | KP_4 | KP_5 | KP_6 | LS(C) |   | TRANS | NONE | LEFT | DOWN | RGHT | K_SCROLL_DN |
            // | TRANS | KP_0  | KP_1 | KP_2 | KP_3 | LS(LC) |   | TRANS | NONE | NONE | NONE | NONE | NONE        |
            //                    | TRANS | TRANS | MO(3) | TRANS | TRANS | TRANS | TRANS |

            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans               &trans  &none   &kp HOME        &kp UP_ARROW    &kp END    &kp LC(UP_ARROW)  &trans
&trans  &kp N0  &kp N4  &kp N5  &kp N6  &kp LS(LCTRL)        &trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp LC(DOWN)      &trans
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &kp LS(LA(LCTRL))    &trans  &none   &none           &none           &none      &none             &trans
                &trans  &trans  &trans  &trans               &trans  &trans  &trans          &trans
                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Symbol {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // | TRANS | EXCL | AT   | HASH | DLLR | PRCNT |   | CARET | AMPS | ASTRK | LPAR | RPAR | BSPC |
            // | TRANS | NONE | NONE | NONE | NONE | NONE |   | MINUS | EQUAL | LBKT | RBKT | BSLH | GRAVE |
            // | TRANS | OUT_USB | OUT_BLE | NONE | NONE | NONE |   | UNDER | PLUS | LBRC | RBRC | PIPE | TILDE |
            //                    | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | MO(3) | TRANS |

            bindings = <
&as GRAVE  &as EXCL  &as AT  &as HASH  &as DLLR  &as PRCNT    &trans  &as CARET  &as AMPS   &as ASTRK  &as LPAR          &as RPAR           &trans
&trans     &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &trans  &kp F11    &as MINUS  &as EQUAL  &as LEFT_BRACKET  &as RIGHT_BRACKET  &as BACKSLASH
&trans     &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &trans  &kp F12    &none      &none      &none             &none              &none
                     &trans  &trans    &trans    &trans       &trans  &trans     &trans     &trans
                                                              &trans
            >;
        };

        Function {
            display-name = "Fn";

            // -----------------------------------------------------------------------------------------
            // | TRANS | N1   | N2   | N3   | N4   | N5   |   | N6   | N7   | N8   | N9   | N0   | BSPC |
            // | TRANS | BT_CLR_ALL | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 |   | LEFT | DOWN | UP   | RIGHT | HOME | PG_UP |
            // | TRANS | RGB_OFF | RGB_ON | EP_OFF | EP_ON | RGB_EFF |   | RGB_EFR | RGB_SPI | RGB_BRI | RGB_BRD | END  | PG_DN |
            //                    | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS | TRANS |

            bindings = <
&trans  &none            &none           &none              &none             &none              &trans  &none            &none            &none            &to 0            &to 1  &to 5
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3       &trans  &out OUT_USB     &out OUT_BLE     &none            &none            &none  &none
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &ext_power EP_OFF  &ext_power EP_ON  &rgb_ug RGB_EFF    &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &none  &none
                         &trans          &trans             &trans            &trans             &trans  &trans           &trans           &trans
                                                                                                 &trans
            >;
        };

        Gaming {
            bindings = <
&kp N4  &kp NUMBER_3    &kp Q   &kp W         &kp E      &kp R        &kp UP_ARROW     &kp F1  &kp F2  &kp F3  &kp F4  &trans  &to 0
&kp N2  &kp N1          &kp A   &kp S         &kp D      &kp F        &kp DOWN_ARROW   &kp F5  &kp F6  &kp F7  &kp F8  &trans  &trans
&kp Z   &kp LEFT_SHIFT  &kp X   &kp C         &kp V      &kp B        &kp LEFT_ARROW   &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LEFT_ALT  &kp LCTRL  &kp SPACE    &kp RIGHT_ARROW  &trans  &trans  &trans
                                                                      &trans
            >;

            label = "Gaming";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
